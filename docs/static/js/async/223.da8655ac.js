/*! For license information please see 223.da8655ac.js.LICENSE.txt */
(self.webpackChunk_fifo_rspress_blog=self.webpackChunk_fifo_rspress_blog||[]).push([["223"],{62355:function(e,n,t){"use strict";t.r(n);var r=t("35250"),l=t("51325");function a(e){let n=Object.assign({pre:"pre",code:"code"},(0,l.useMDXComponents)(),e.components);return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{meta:"",children:'// \u9A8C\u8BC1\u7528\u6237\u540D\u662F\u5426\u5408\u6CD5\uFF0C4\u523016\u4F4D\uFF08\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u4E0B\u5212\u7EBF\uFF0C\u51CF\u53F7\uFF09\n    checkUserName(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[a-zA-Z0-9_-]{4,16}$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u5BC6\u7801\u662F\u5426\u5408\u6CD5\uFF0C\u6700\u5C116\u4F4D\uFF0C\u5305\u62EC\u81F3\u5C111\u4E2A\u5927\u5199\u5B57\u6BCD\uFF0C1\u4E2A\u5C0F\u5199\u5B57\u6BCD\uFF0C1\u4E2A\u6570\u5B57\uFF0C1\u4E2A\u7279\u6B8A\u5B57\u7B26\n    checkPassword(value: string = \'\'): boolean {\n        let reg = new RegExp(/^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1IP\u662F\u5426\u5408\u6CD5\n    checkIP(value: string = \'\'): boolean {\n        let reg = new RegExp(/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/g);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1IPv4\u662F\u5426\u5408\u6CD5\n    checkIPv4(value: string = \'\'): boolean {\n        let reg = new RegExp(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1Email\u662F\u5426\u5408\u6CD5\n    checkEmail(value: string = \'\'): boolean {\n        let reg = new RegExp(/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1Mobile\u662F\u5426\u5408\u6CD5\n    checkMobile(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[1][3|5|7|8][0-9]{9}$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u8F66\u724C\u53F7\u7801\u662F\u5426\u5408\u6CD5\n    checkCarNumber(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[\u4EAC\u6D25\u6CAA\u6E1D\u5180\u8C6B\u4E91\u8FBD\u9ED1\u6E58\u7696\u9C81\u65B0\u82CF\u6D59\u8D63\u9102\u6842\u7518\u664B\u8499\u9655\u5409\u95FD\u8D35\u7CA4\u9752\u85CF\u5DDD\u5B81\u743C\u4F7F\u9886A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9\u6302\u5B66\u8B66\u6E2F\u6FB3]{1}$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u8EAB\u4EFD\u8BC1\u662F\u5426\u5408\u6CD5\n    checkIDCard(value: string = \'\'): boolean {\n        let city = {11:"\u5317\u4EAC",12:"\u5929\u6D25",13:"\u6CB3\u5317",14:"\u5C71\u897F",15:"\u5185\u8499\u53E4",21:"\u8FBD\u5B81",22:"\u5409\u6797",23:"\u9ED1\u9F99\u6C5F ",31:"\u4E0A\u6D77",32:"\u6C5F\u82CF",33:"\u6D59\u6C5F",34:"\u5B89\u5FBD",35:"\u798F\u5EFA",36:"\u6C5F\u897F",37:"\u5C71\u4E1C",41:"\u6CB3\u5357",42:"\u6E56\u5317 ",43:"\u6E56\u5357",44:"\u5E7F\u4E1C",45:"\u5E7F\u897F",46:"\u6D77\u5357",50:"\u91CD\u5E86",51:"\u56DB\u5DDD",52:"\u8D35\u5DDE",53:"\u4E91\u5357",54:"\u897F\u85CF ",61:"\u9655\u897F",62:"\u7518\u8083",63:"\u9752\u6D77",64:"\u5B81\u590F",65:"\u65B0\u7586",71:"\u53F0\u6E7E",81:"\u9999\u6E2F",82:"\u6FB3\u95E8",91:"\u56FD\u5916 "};\n\n        if(!value || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(value)){\n            return false;\n        }\n        else if(!city[value.substr(0,2)]){\n            return false;\n        }\n        else {\n            // 18\u4F4D\u8EAB\u4EFD\u8BC1\u9700\u8981\u9A8C\u8BC1\u6700\u540E\u4E00\u4F4D\u6821\u9A8C\u4F4D\n            if(value.length === 18){\n                let code: Array<string> = value.split(\'\');\n                //\u2211(ai\xd7Wi)(mod 11)\n                //\u52A0\u6743\u56E0\u5B50\n                let factor: Array<number> = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 ];\n                //\u6821\u9A8C\u4F4D\n                let parity: Array<number|string> = [ 1, 0, \'X\', 9, 8, 7, 6, 5, 4, 3, 2 ];\n                let sum: number = 0;\n                let ai: any = 0;\n                let wi: number = 0;\n                for (let i = 0; i < 17; i++) {\n                    ai = code[i];\n                    wi = factor[i];\n                    sum += ai * wi;\n                }\n                let last = parity[sum % 11];\n                if(last+\'\' !== code[17]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    // \u9A8C\u8BC1QQ\u53F7\u7801\u662F\u5426\u5408\u6CD5\uFF0C\u975E0\u5F00\u5934\u76845\u81F311\u4F4D\u6570\u5B57\n    checkQQ(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[1-9][0-9]{4,10}$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u5FAE\u4FE1\u53F7\u662F\u5426\u5408\u6CD5\uFF0C6\u81F320\u4F4D\uFF0C\u4EE5\u5B57\u6BCD\u5F00\u5934\uFF0C\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u51CF\u53F7\uFF0C\u4E0B\u5212\u7EBF\n    checkWX(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u662F\u5426\u5305\u542B\u4E2D\u6587\u5B57\u7B26\n    checkCN(value: string = \'\'): boolean {\n        let reg = new RegExp(/[\\u4E00-\\u9FA5]/);\n        return reg.test(value);\n    }\n    // \u9A8C\u8BC1\u90AE\u653F\u7F16\u7801\u662F\u5426\u5408\u6CD5\n    checkPostcode(value: string = \'\'): boolean {\n        let reg = new RegExp(/^[1-9]\\d{5}$/);\n        return reg.test(value);\n    }\n'})})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.useMDXComponents)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}n.default=s,s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["..%2Fsource%2F_posts%2F2024-10-17-checker.md"]={toc:[],title:"",frontmatter:{layout:"post",title:"checker\u9A8C\u8BC1\u5668",date:"2024-10-17T22:40:00.000Z",categories:["\u8BED\u8A00"],tags:["check\uFF0Cregex"]}}}}]);